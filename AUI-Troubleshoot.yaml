Troubleshooting / Common Issues
1. New Docker image is not deployed automatically

Cause: ArgoCD Image Updater may not detect the new image.

Fix:

Check that your Application has the correct annotations:

kubectl -n argocd get application crud-app-k8s -o yaml | grep argocd-image-updater


Ensure the deployment name and container name match what is defined in image-list.

Confirm that the Docker Hub credentials are correct:

kubectl -n argocd get secret dockerhub-creds -o yaml

2. ArgoCD Image Updater logs show “images_skipped=1”

Cause: Dry run mode or no matching images detected.

Fix:

Make sure the annotation argocd-image-updater.argoproj.io/write-back-method: argocd is set.

Restart the AUI deployment after config changes:

kubectl -n argocd rollout restart deploy/argocd-image-updater

3. Application fails to sync after updating

Cause: Deployment file or Kustomize structure not correct.

Fix:

Verify your kustomization.yaml includes all resources (Deployment, Service, etc.).

Make sure the path in the Application source.path points to the directory containing kustomization.yaml.

4. Updates take a few seconds instead of instant

Cause:

ArgoCD polling interval + AUI interval.

Kubernetes deployment rollout takes a few seconds.

Fix:

Reduce argocd-image-updater.argoproj.io/update-interval (e.g., 10s).

Ensure syncPolicy.automated.selfHeal: true is set in the Application spec.

5. Registry not configured correctly

Cause: Image Updater cannot access Docker Hub.

Fix:

Check registries.conf.yaml for correct credentials and api_url.

Make sure the ConfigMap is applied and AUI deployment restarted:

kubectl apply -f registries.conf.yaml
kubectl -n argocd rollout restart deploy/argocd-image-updater
